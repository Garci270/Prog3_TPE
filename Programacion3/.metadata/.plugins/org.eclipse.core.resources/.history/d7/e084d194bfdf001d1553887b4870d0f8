package Practico2_1;

public class Arbol<T> {
	private Node<Integer> first;
	private int size;
	
	public Arbol() {
		this.first = null;
		this.size = 0;
	}
	
	public boolean isEmpty() {
		if(this.first == null) {
			return true;
		}
		return false;
	}
	
	public void insert(int info) {
	        Node<Integer> new_node = new Node(info,null,null);
	        if (this.first == null) {
	        	this.first = new_node;
	            return;
	        }
	        Node<Integer> current_node = this.first;
	        while (true) {
	            if (info < current_node.getInfo()) {
	                if (current_node.getIzq() == null) {
	                    current_node.setIzq(new_node);
	                    break;
	                }
	                current_node = current_node.getIzq();
	            } else if (info > current_node.getInfo()) {
	                if (current_node.getDer() == null) {
	                    current_node.setDer(new_node);
	                    break;
	                }
	                current_node = current_node.getDer();
	            } else {
	                // The value already exists in the tree
	                break;
	            }
	        }
	    }
	
	@Override
	 public String toString() {
	        StringBuilder sb = new StringBuilder();
	        this.toString(this.first, sb);
	        return sb.toString();
	    }

	    private void toString(Node node, StringBuilder sb) {
	        if (node == null) {
	            return;
	        }
	        toString(node.getIzq(), sb);
	        sb.append(node.getInfo() + " ");
	        toString(node.getDer(), sb);
	    }
	
	
	
}
